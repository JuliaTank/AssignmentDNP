@namespace LoginComponent
@layout LoginLayout
@using AssignmentDNP.Authentication
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@page "/"
<CascadingAuthenticationState>
<AuthorizeView>
    <NotAuthorized>
        <div id="loginForm">
            <img class="logo" src="images/logo.png" alt="logo">

            <div class="form-group">
                <label>User name:</label>
                <input class="form-control" type="text" placeholder="user name" @bind-value="username"/>
            </div>
            <div class="form-group">
                <label>Password</label>
                <input class="form-control" type="password" placeholder="password" @bind-value="password"/>
            </div>
            <div style="color:red">@errorMessage</div>
            <button class="btn button" type="submit" @onclick="PerformLogin">
                <span>Login</span>
            </button>
        </div>
           
    </NotAuthorized>
</AuthorizeView>
</CascadingAuthenticationState>
@code {
    private string username;
    private string password;
    private string errorMessage;
    private bool isAuthorized;

    public async Task PerformLogin()
    {
        errorMessage = "";
        try
        {
           await ((UserCustomAuthenticationStateProvider) AuthenticationStateProvider).ValidateLogin(username, password);
            username = "";
            password = "";
            isAuthorized = true;
            NavigationManager.NavigateTo("/main");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            errorMessage = e.Message;
        }
    }

    
}
